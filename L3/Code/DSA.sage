from hashlib import sha256
from Crypto.Util.number import bytes_to_long

def hash_to_Zp(m, p):
    """This function hashes a message to an integer in Z_p"""
    F = Integers(p)
    return F(int(sha256(m).hexdigest(),16))


def sign(m, a, p, g):

    r = s = 0
    F = Integers(p)
    while r == 0 or s == 0:
        k = F.random_element()
        r = F(k * g)
        h = hash_to_Zp(m, p)
        s = F((h + a * r)/k)
    return (r, s)


def verify(m, s, r, A, p, g):

    F = Integers(p)
    h = hash_to_Zp(m, p)
    u1 = F(h/s)
    u2 = F(r/s)
    u1 = F(u1 * g)
    u2 = F(u2 * A)
    x = F(u1 + u2)
    return r == x


if __name__ == "__main__":

    g = 26832129618024974686879374467011674861259985700216812074955554778646257380947111569126822791576950631328488490817154661430040179879879830895711483104664735084345750359781889987952782733767491915422336045397957700778585479075755258716246275993360638216113473798256828498736703606469244426468901480617093425700950189980729645251443434997979830503980829512919371307638499456256579512753480788121966222325769773139840126724051644822006927585418809038059375516879789721957621114572701584283486864821024488271838921323726044591303276607496297402940865216536050996308330639448941645309936677980463710656667952358724330968172
    p = 30433523943074345366001866422198737772765627611765549465361043140768414182212753362130257302186517334171186209612464037743753204239467172907802636103731599726406280742088480120535656165477839641705123290316239347103004034507975323838578585407222668878802950997536831384923677242836578859041826337796238985197188716837290025701798722549049327460799026928398331056448935739057703679108744638479852711456086151974621646195344651014803225092904124275170139474027779887199805062223665655292581299472979351889954390893295433875142026042886027065686447039015344458760731174165781116293316051331566796732001901327478117801623
    A = 25443462630645927604678796817839050640716696410956415698562050088731317852194073844934779573003890893930226522842110960625958854413093149125438846552904567764828761030547518720701887342746925919068672775298815932794075896485770968579680331304823434807862863988601525333597846609575031960998523621780568050367443474716438877051914992855209992615748461930971203398910792959088445588273606256097567287350933885909916401354355688921959161437456365407461042247043517193786168862533396505126097082914047116402424356260992568297340774318726229127991551024165594387026270043689370324317041435256700838117276449324296452533934
    m = b'Please send 2000CHF to Account ABCDEFG'
    r = 8658326242938674738024418871232033408246972266278691056695077349039535345723208718802587224650324491604235086192510104961534441200145045224910598309114276856366180955997582924390342468690425001520251916052076462615020598107298525406342525135093843702319601971178635902532149071278799473164398766863170256355733711001956277760322465773108592824877553675029591196898765282954562095750931794666333408966318255922395476997652768693756298633312682467307769088055899887136754501320104839868353188693224279465825888063195895070700346215651727489644409078796497705542746231093283823472722880908356892267297487522266438221195
    s = 2294437036188579506401715416878324929570175188237491270228763404294801470538571552624151102080581623638143095279836503741249965535367833377851450228803427590200020987115737890366603147536609086739314772119120614850154606920680178081402250456962265028811204393234614610329875820296711570671737443593249312463926804404563168784588239189848516223175950224047466347833471289221337988312623236430624234941001208133163126969264252256714684996780702350752056283548118239065317410604620862387665966736733190634424792208338434859801134967483168184712960926763845571075220511716980201432578018738307392657311863680197694455642

    # Test de la fonction de vérification
    print("Verification working :", verify(m, s, r, A, p,g))

    # Génération de paramètres et test de la fonction de signature et de vérification
    F = Integers(p)
    a = F.random_element()
    A = g*a

    (r,s) = sign(m,a,p,g)
    print("Auto-sign and verification working :", verify(m,s,r,A,p,g))

    # Attaque sur les paramètres donnés
    g = 26832129618024974686879374467011674861259985700216812074955554778646257380947111569126822791576950631328488490817154661430040179879879830895711483104664735084345750359781889987952782733767491915422336045397957700778585479075755258716246275993360638216113473798256828498736703606469244426468901480617093425700950189980729645251443434997979830503980829512919371307638499456256579512753480788121966222325769773139840126724051644822006927585418809038059375516879789721957621114572701584283486864821024488271838921323726044591303276607496297402940865216536050996308330639448941645309936677980463710656667952358724330968172
    p = 30433523943074345366001866422198737772765627611765549465361043140768414182212753362130257302186517334171186209612464037743753204239467172907802636103731599726406280742088480120535656165477839641705123290316239347103004034507975323838578585407222668878802950997536831384923677242836578859041826337796238985197188716837290025701798722549049327460799026928398331056448935739057703679108744638479852711456086151974621646195344651014803225092904124275170139474027779887199805062223665655292581299472979351889954390893295433875142026042886027065686447039015344458760731174165781116293316051331566796732001901327478117801623
    A = 25443462630645927604678796817839050640716696410956415698562050088731317852194073844934779573003890893930226522842110960625958854413093149125438846552904567764828761030547518720701887342746925919068672775298815932794075896485770968579680331304823434807862863988601525333597846609575031960998523621780568050367443474716438877051914992855209992615748461930971203398910792959088445588273606256097567287350933885909916401354355688921959161437456365407461042247043517193786168862533396505126097082914047116402424356260992568297340774318726229127991551024165594387026270043689370324317041435256700838117276449324296452533934

    # Récupération de la clé privée
    private_key = F(A/g)

    # Signature d'un message en utilisant la clé récupérée
    m2 = "Ceci est un message authentique, intègre et non-répudiable".encode('utf-8')
    (r,s) = sign(m2,private_key,p,g)
    print("Attack working :", verify(m2,s,r,A,p,g))